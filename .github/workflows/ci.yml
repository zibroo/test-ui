name: Integration

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["prod"]
  pull_request:
    branches: ["prod"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  ENVIRONMENT: prod
  AWS_REGION: us-east-1
  APPLICATION_NAME: bookapp
  APPLICATION_NAMESPACE: application
  CD_DESTINATION_OWNER: zibroo
  CD_PROJECT: test-cd

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  get_inputs:
    outputs:
      sha8: ${{ steps.slug.outputs.sha8 }}
    runs-on: self-hosted
    steps:
      - name: Get short SHA
        id: slug
        run: echo "sha8=$(echo ${GITHUB_SHA} | cut -c1-8)" >> $GITHUB_OUTPUT
      
  build_images_and_push:
    needs: [get_inputs]
    runs-on: self-hosted
    outputs:
      registry: ${{ steps.login-ecr.outputs.registry }}
    steps:
      - name: Check out
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
        with:
          aws-region: ${{ env.AWS_REGION }}
          mask-aws-account-id: "false"
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Build ui image and push to ECR
        env:
          SHA8: ${{ needs.get_inputs.outputs.sha8 }}
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          COMPONENT_NAME: "ui"
        run: |
          docker build -f .devops/docker/$COMPONENT_NAME.dockerfile -t $REGISTRY/$ENVIRONMENT/$COMPONENT_NAME:$SHA8 src/$COMPONENT_NAME/
          docker push $REGISTRY/$ENVIRONMENT/$COMPONENT_NAME:$SHA8
  k8s_manifest_storing:
    needs: [build_images_and_push, get_inputs]
    runs-on: self-hosted
    container:
      image: alpine/helm:latest
    steps:
      - name: Check out
        uses: actions/checkout@v4
      - name: deploy to k8s
        env:
          REGISTRY: ${{ needs.build_images_and_push.outputs.registry }}
          SHA8: ${{ needs.get_inputs.outputs.sha8 }}
        run: |
          rm -rf manifest
          helm template $APPLICATION_NAME .devops/helm/bookapp -f .devops/helm/bookapp/values.yaml  --create-namespace -n $APPLICATION_NAMESPACE --output-dir manifest \
            --set ui.image.repository=$REGISTRY/$ENVIRONMENT/ui \
            --set ui.image.tag=$SHA8 \
            --set ingress.ingress.hosts[0].host=SOMEDOMAIN \

      - name: Pushes to another repository
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          source-directory: "manifest/bookapp/charts"
          target-directory: "bookapp/ui"
          destination-github-username: ${{ env.CD_DESTINATION_OWNER }}
          destination-repository-name: ${{ env.CD_PROJECT }}
          target-branch: ${{ env.ENVIRONMENT }}